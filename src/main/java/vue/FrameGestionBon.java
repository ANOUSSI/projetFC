/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vue;

import javax.swing.GroupLayout.Alignment;

import java.util.ArrayList;
import java.util.List;

import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

import dao.InterService;
import dao.UserService;
import model.BonCommande;
import model.Fournisseurs;
import model.User;

import javax.swing.JTextField;
import javax.swing.JComboBox;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JPanel;
import java.awt.Color;
import java.awt.Font;

/**
 *
 * @author ANOUSSI
 */
public class FrameGestionBon extends javax.swing.JDialog {
	public InterService serVice = new UserService();
	List<Fournisseurs> list = new ArrayList<>();
	List<BonCommande> listBon = new ArrayList<>();
	List<User> listUser = new ArrayList<>();
	JComboBox comboBox;

	JComboBox comboBox_1;

	/**
	 * Creates new form FrameGestionBon
	 */
	public FrameGestionBon(java.awt.Frame parent) {
		super(parent, "Dialog", true);
		setTitle("FC");
		list = serVice.getListFournisseur();
		listUser = serVice.getListUser();
		listBon = serVice.getListBonCommande(false);
		initComponents();
		actualiserTabeau(listBon);
	}

	public String commpleteZer(String numbero) {
		String zero = "";
		if (numbero.length() < 8) {
			String nombre = "";
			for (int i = 0; i < 8 - numbero.length(); i++) {
				zero += "0";
			}
		}
		zero += numbero;
		return zero;

	}

	public void actualiserTabeau(List<BonCommande> listBon) {

		Object[][] tableau = new Object[listBon.size()][4];
		int i = 0;
		System.out.println("__________________________________");
		System.out.println(listBon.size());
		System.out.println("__________________________________");
		for (BonCommande boncommande : listBon) {
			tableau[i][0] = false;
			tableau[i][1] = boncommande.getNumerobon();
			tableau[i][2] =boncommande.getDescription(); 
			tableau[i][3] = boncommande.getNomUsers();
			i++;
		}
		
		DefaultTableModel model = new DefaultTableModel(tableau,
				new String[] { "", "NUMERO BORDEREAU", "DESCRIPTION", "NOM DU DETENTEUR" }) {
			@Override
			public Class<?> getColumnClass(int columnIndex) {
				if (columnIndex == 0) {
					return Boolean.class; // Colonne des cases � cocher
				} else {
					return super.getColumnClass(columnIndex);
				}
			}

			@Override
			public boolean isCellEditable(int row, int column) {
				return column == 0; // Seule la colonne des cases � cocher est �ditable
			}
		};

		jTable1.setModel(model);

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jTable1.setModel(
				new javax.swing.table.DefaultTableModel(
						new Object[][] { { null, null, null, null }, { null, null, null, null },
								{ null, null, null, null }, { null, null, null, null } },
						new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
		jScrollPane1.setViewportView(jTable1);

		JLabel lblNewLabel = new JLabel("Debut");
		lblNewLabel.setFont(new Font("Times New Roman", Font.BOLD, 14));

		JLabel lblNewLabel_1 = new JLabel("Fin");
		lblNewLabel_1.setFont(new Font("Times New Roman", Font.BOLD, 14));

		JLabel lblNewLabel_2 = new JLabel("Description");
		lblNewLabel_2.setFont(new Font("Times New Roman", Font.BOLD, 14));

		JLabel lblNewLabel_3 = new JLabel("Detenteur");
		lblNewLabel_3.setFont(new Font("Times New Roman", Font.BOLD, 14));

		JButton btnNewButton = new JButton("Attribuer");
		btnNewButton.setFont(new Font("Times New Roman", Font.BOLD, 16));
		btnNewButton.setBackground(Color.BLUE);
		btnNewButton.setForeground(Color.WHITE);
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				firstNumBon = Integer.parseInt(textFieldFirstBon.getText().toString());
				lastNumBon = Integer.parseInt(textFieldLastBon.getText().toString());

				System.out.println(firstNumBon);
				final List<BonCommande> listBons = new ArrayList<>();
				int i = 1;
				while (firstNumBon <= lastNumBon) {

					int numgenere = firstNumBon;
					String numeInser = commpleteZer(String.valueOf(numgenere));

					// insertion dans la bd
					int index = comboBox_1.getSelectedIndex();
					Fournisseurs four = list.get(index);
					BonCommande boncommande = new BonCommande();
					boncommande.setNumerobon(numeInser);
					boncommande.setIdfournisseur(four.getId());
					boncommande.setNomFournisseur(four.getName());
					boncommande.setSystem(0);
					// recupertion du client
					int indexuser = comboBox.getSelectedIndex();
					User user = listUser.get(indexuser);
					boncommande.setIdUser( user.getId());
					boncommande.setNomUsers(user.getName()+" "+user.getPrenom() );
					
					// boncommande.setIdboncommande();
					boncommande.setQuantite(0);
					boncommande.setUtilise(false);
					boncommande.setDescription(textFieldDescription.getText().toString());
					// BonCommande bonCommande= serVice.saveBonCommande( boncommande);
					listBons.add(boncommande);
					firstNumBon++;
					i++;
				}

				serVice.updateBonTCommande(listBons);
				listBon = serVice.getListBonCommande();
				actualiserTabeau(listBon);				
			}
		});

		JButton btnNewButton_1 = new JButton("Sauvegarder");
		btnNewButton_1.setForeground(Color.WHITE);
		btnNewButton_1.setBackground(new Color(0, 128, 0));
		btnNewButton_1.setFont(new Font("Times New Roman", Font.BOLD, 16));
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				firstNumBon = Integer.parseInt(textFieldFirstBon.getText().toString());
				lastNumBon = Integer.parseInt(textFieldLastBon.getText().toString());

				System.out.println(firstNumBon);
				final List<BonCommande> listBons = new ArrayList<>();
				int i = 1;
				while (firstNumBon <= lastNumBon) {

					int numgenere = firstNumBon;
					String numeInser = commpleteZer(String.valueOf(numgenere));

					// insertion dans la bd
					int index = comboBox_1.getSelectedIndex();
					Fournisseurs four = list.get(index);
					BonCommande boncommande = new BonCommande();
					boncommande.setNumerobon(numeInser);
					boncommande.setIdfournisseur(four.getId());
					boncommande.setNomFournisseur(four.getName());
					boncommande.setSystem(0);
					// boncommande.setIdboncommande();
					boncommande.setQuantite(0);
					boncommande.setUtilise(false);
					boncommande.setDescription(textFieldDescription.getText().toString());
					// BonCommande bonCommande= serVice.saveBonCommande( boncommande);
					listBons.add(boncommande);
					firstNumBon++;
					i++;
				}

				serVice.saveListbon(listBons);

				listBon = serVice.getListBonCommande();
				actualiserTabeau(listBon);

			}
		});

		textFieldFirstBon = new JTextField();
		textFieldFirstBon.setFont(new Font("Times New Roman", Font.BOLD, 14));
		textFieldFirstBon.setColumns(10);

		textFieldLastBon = new JTextField();
		textFieldLastBon.setFont(new Font("Times New Roman", Font.PLAIN, 14));
		textFieldLastBon.setColumns(10);

		textFieldDescription = new JTextField();
		textFieldDescription.setFont(new Font("Times New Roman", Font.BOLD, 14));
		textFieldDescription.setColumns(10);

		JLabel lblNewLabel_4 = new JLabel("Fournisseur");
		lblNewLabel_4.setFont(new Font("Times New Roman", Font.BOLD, 14));
		String[] elements = new String[list.size()];
		int idex = 0;
		for (Fournisseurs fourniseur : list) {
			elements[idex] = fourniseur.getName();
			idex++;
		}
		comboBox_1 = new JComboBox(elements);
		comboBox_1.setFont(new Font("Times New Roman", Font.BOLD, 14));

		String[] elementsUser = new String[listUser.size()];
		int ide = 0;
		for (User user : listUser) {
			elementsUser[ide] = user.getName();
			ide++;
		}
		comboBox = new JComboBox(elementsUser);
		comboBox.setFont(new Font("Times New Roman", Font.BOLD, 15));
		
		JPanel panel = new JPanel();
		panel.setBackground(Color.BLUE);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap()
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(lblNewLabel)
						.addComponent(textFieldFirstBon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(73)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(lblNewLabel_1)
						.addComponent(textFieldLastBon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(48)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(lblNewLabel_2)
						.addComponent(textFieldDescription, GroupLayout.PREFERRED_SIZE, 106, GroupLayout.PREFERRED_SIZE))
					.addGap(39)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(lblNewLabel_3)
						.addComponent(comboBox, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(lblNewLabel_4)
						.addComponent(comboBox_1, GroupLayout.PREFERRED_SIZE, 135, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(btnNewButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(btnNewButton_1, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 117, GroupLayout.PREFERRED_SIZE))
					.addGap(48))
				.addComponent(panel, GroupLayout.DEFAULT_SIZE, 1034, Short.MAX_VALUE)
				.addGroup(layout.createSequentialGroup()
					.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addGap(12, 12, Short.MAX_VALUE)
							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
								.addGroup(layout.createParallelGroup(Alignment.BASELINE)
									.addComponent(lblNewLabel_3)
									.addComponent(lblNewLabel_2))
								.addComponent(lblNewLabel_1)
								.addComponent(lblNewLabel)
								.addComponent(lblNewLabel_4, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE))
							.addPreferredGap(ComponentPlacement.UNRELATED))
						.addGroup(layout.createSequentialGroup()
							.addComponent(btnNewButton, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED)))
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(textFieldFirstBon, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
							.addComponent(textFieldLastBon, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
							.addComponent(textFieldDescription, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(comboBox, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
							.addComponent(comboBox_1, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createSequentialGroup()
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(btnNewButton_1, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)))
					.addGap(11)
					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 391, GroupLayout.PREFERRED_SIZE)
					.addGap(18)
					.addComponent(panel, GroupLayout.PREFERRED_SIZE, 33, GroupLayout.PREFERRED_SIZE))
		);
		panel.setLayout(null);
		
		JButton btnNewButton_2 = new JButton("Cancel");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				dispose();
			}
		});
		btnNewButton_2.setBounds(899, 0, 89, 22);
		panel.add(btnNewButton_2);
		getContentPane().setLayout(layout);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(FrameGestionBon.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(FrameGestionBon.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(FrameGestionBon.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(FrameGestionBon.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>

		/* Create and display the dialog */

	}

	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	private JTextField textFieldFirstBon;
	private JTextField textFieldLastBon;
	private JTextField textFieldDescription;
	private DialogCallback dialogCallback;
	int firstNumBon;
	int lastNumBon;
	String nomFournisseur;
	int numGenerer;

	public DialogCallback getDialogCallback() {
		return dialogCallback;
	}

	public void setDialogCallback(DialogCallback dialogCallback) {
		this.dialogCallback = dialogCallback;
	}

	public int getFirstNumBon() {
		return firstNumBon;
	}

	public void setFirstNumBon(int firstNumBon) {
		this.firstNumBon = firstNumBon;
	}

	public int getLastNumBon() {
		return lastNumBon;
	}

	public void setLastNumBon(int lastNumBon) {
		this.lastNumBon = lastNumBon;
	}

	public String getNomFournisseur() {
		return nomFournisseur;
	}

	public void setNomFournisseur(String nomFournisseur) {
		this.nomFournisseur = nomFournisseur;
	}
}
